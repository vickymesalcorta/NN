params = struct(...
        'actFunct', 0, ...
        'expError', 0.01,...
        'eta', 0.3, ...
        'alpha', 0.1, ...
        'adaptInc', 0.0003, ...
        'adaptDec', 0.01, ...
        'adaptStep', 4, ...
        'arq', [2,8,6,1], ...
        'n', 2 ...
    );

for i = 0:8
    m = main(params.actFunct,params.expError,params.eta,params.alpha+i*0.1,params.adaptInc, ...
    params.adaptDec, params.adaptStep, params.arq, params.n);
    save(['arq' num2str(params.arq) 'alpha' num2str(params.eta) 'result.mat'], 'm');
end

params = struct(...
        'actFunct', 0, ...
        'expError', 0.01,...
        'eta', 0.3, ...
        'alpha', 0.1, ...
        'adaptInc', 0.0003, ...
        'adaptDec', 0.01, ...
        'adaptStep', 4, ...
        'arq', [2,15,1], ...
        'n', 2 ...
    );

for i = 0:8
    m = main(params.actFunct,params.expError,params.eta,params.alpha+i*0.1,params.adaptInc, ...
    params.adaptDec, params.adaptStep, params.arq, params.n);
    save(['arq' num2str(params.arq) 'alpha' num2str(params.eta) 'result.mat'], 'm');
end