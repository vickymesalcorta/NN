% PROBAR CON LOS PESOS MAS CHICOS
%     params = struct(...
%         'actFunct', 1, ...
%         'eta', 0.075, ...
%         'alpha', 0.9, ...
%         'arq', [2,10,6, 1], ...
%         'epocs', 1000, ...
%         'training', 700 ,...
%         'adaptInc', 0, ...
%         'adaptDec', 0, ...
%         'adaptStep', 0, ...
%         'adaptM', 0 ...
%     );

% m = main(params.actFunct,params.eta, params.alpha, params.arq, params.epocs, ...
% params.training, params.adaptInc, params.adaptDec, params.adaptStep, params.adaptM);
% save(['[' num2str(params.arq) '] bRESULT(sin step ni alpa).mat'], 'm');

    params = struct(...
        'actFunct', 1, ...
        'eta', 0.1, ...
        'alpha', 0.9, ...
        'arq', [2,10,6, 1], ...
        'epocs', 1000, ...
        'training', 700 ,...
        'adaptInc', 0.1, ...
        'adaptDec', 0.0001, ...
        'adaptStep', 5, ...
        'adaptM', 200 ...
    );

m = main(params.actFunct,params.eta, params.alpha, params.arq, params.epocs, ...
params.training, params.adaptInc, params.adaptDec, params.adaptStep, params.adaptM);
save(['[' num2str(params.arq) '] bRESULT1.mat'], 'm');


    params = struct(...
        'actFunct', 1, ...
        'eta', 0.1, ...
        'alpha', 0.9, ...
        'arq', [2,10,6, 1], ...
        'epocs', 1000, ...
        'training', 700 ,...
        'adaptInc', 0.05, ...
        'adaptDec', 0.0001, ...
        'adaptStep', 10, ...
        'adaptM', 200 ...
    );

m = main(params.actFunct,params.eta, params.alpha, params.arq, params.epocs, ...
params.training, params.adaptInc, params.adaptDec, params.adaptStep, params.adaptM);
save(['[' num2str(params.arq) '] bRESULT2.mat'], 'm');


    params = struct(...
        'actFunct', 1, ...
        'eta', 0.1, ...
        'alpha', 0.9, ...
        'arq', [2,10,6, 1], ...
        'epocs', 1000, ...
        'training', 700 ,...
        'adaptInc', 0.05, ...
        'adaptDec', 0.001, ...
        'adaptStep', 5, ...
        'adaptM', 100 ...
    );

m = main(params.actFunct,params.eta, params.alpha, params.arq, params.epocs, ...
params.training, params.adaptInc, params.adaptDec, params.adaptStep, params.adaptM);
save(['[' num2str(params.arq) '] bRESULT3.mat'], 'm');


    params = struct(...
        'actFunct', 1, ...
        'eta', 0.1, ...
        'alpha', 0.9, ...
        'arq', [2,10,6, 1], ...
        'epocs', 1000, ...
        'training', 700 ,...
        'adaptInc', 0.05, ...
        'adaptDec', 0.0001, ...
        'adaptStep', 5, ...
        'adaptM', 30 ...
    );

m = main(params.actFunct,params.eta, params.alpha, params.arq, params.epocs, ...
params.training, params.adaptInc, params.adaptDec, params.adaptStep, params.adaptM);
save(['[' num2str(params.arq) '] bRESULT4.mat'], 'm');


    params = struct(...
        'actFunct', 1, ...
        'eta', 0.1, ...
        'alpha', 0.9, ...
        'arq', [2,10,6, 1], ...
        'epocs', 1000, ...
        'training', 700 ,...
        'adaptInc', 0.005, ...
        'adaptDec', 0.001, ...
        'adaptStep', 5, ...
        'adaptM', 300 ...
    );

m = main(params.actFunct,params.eta, params.alpha, params.arq, params.epocs, ...
params.training, params.adaptInc, params.adaptDec, params.adaptStep, params.adaptM);
save(['[' num2str(params.arq) '] bRESULT5.mat'], 'm');


    params = struct(...
        'actFunct', 1, ...
        'eta', 0.1, ...
        'alpha', 0.9, ...
        'arq', [2,10,6, 1], ...
        'epocs', 1000, ...
        'training', 700 ,...
        'adaptInc', 0.08, ...
        'adaptDec', 0.0005, ...
        'adaptStep', 10, ...
        'adaptM', 200 ...
    );

m = main(params.actFunct,params.eta, params.alpha, params.arq, params.epocs, ...
params.training, params.adaptInc, params.adaptDec, params.adaptStep, params.adaptM);
save(['[' num2str(params.arq) '] bRESULT6.mat'], 'm');


    params = struct(...
        'actFunct', 1, ...
        'eta', 0.1, ...
        'alpha', 0.9, ...
        'arq', [2,10,6, 1], ...
        'epocs', 1000, ...
        'training', 700 ,...
        'adaptInc', 0.05, ...
        'adaptDec', 0.0001, ...
        'adaptStep', 5, ...
        'adaptM', 20 ...
    );

m = main(params.actFunct,params.eta, params.alpha, params.arq, params.epocs, ...
params.training, params.adaptInc, params.adaptDec, params.adaptStep, params.adaptM);
save(['[' num2str(params.arq) '] bRESULT7.mat'], 'm');


    params = struct(...
        'actFunct', 1, ...
        'eta', 0.1, ...
        'alpha', 0.9, ...
        'arq', [2,10,6, 1], ...
        'epocs', 1000, ...
        'training', 700 ,...
        'adaptInc', 0.05, ...
        'adaptDec', 0.0001, ...
        'adaptStep', 5, ...
        'adaptM', 10 ...
    );

m = main(params.actFunct,params.eta, params.alpha, params.arq, params.epocs, ...
params.training, params.adaptInc, params.adaptDec, params.adaptStep, params.adaptM);
save(['[' num2str(params.arq) '] bRESULT8.mat'], 'm');


    params = struct(...
        'actFunct', 1, ...
        'eta', 0.1, ...
        'alpha', 0.9, ...
        'arq', [2,10,6, 1], ...
        'epocs', 1000, ...
        'training', 700 ,...
        'adaptInc', 0.05, ...
        'adaptDec', 0.0001, ...
        'adaptStep', 5, ...
        'adaptM', 200 ...
    );

m = main(params.actFunct,params.eta, params.alpha, params.arq, params.epocs, ...
params.training, params.adaptInc, params.adaptDec, params.adaptStep, params.adaptM);
save(['[' num2str(params.arq) '] bRESULT9.mat'], 'm');

